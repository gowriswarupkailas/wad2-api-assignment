{"version":3,"sources":["components/headerMovie/index.js","api/tmdb-api.js","components/spinner/index.js","components/templateMoviePage/index.js","contexts/moviesContext.js","components/reviewForm/index.js","pages/addMovieReviewPage.js","components/siteHeader/index.js","components/headerMovieList/index.js","images/pexels-dziana-hasanbekava-5480827.jpg","components/filterMoviesCard/index.js","images/film-poster-placeholder.png","components/movieCard/index.js","components/movieList/index.js","components/templateMovieListPage/index.js","components/cardIcons/addToFavorites.js","pages/homePage.js","components/movieReviews/index.js","util.js","components/movieDetails/index.js","pages/movieDetailsPage.js","contexts/actorsContext.js","components/actorCard/index.js","components/actorList/index.js","components/templateActorsPage/index.js","pages/popularActorsPage.js","components/cardIcons/removeFromFavorites.js","components/cardIcons/writeReview.js","pages/favoriteMoviesPage.js","components/movieReview/index.js","pages/movieReviewPage.js","pages/topRatedMoviesPage.js","pages/nowPlayingMoviesPage.js","pages/trendingMoviesPage.js","pages/upcomingMoviesPage.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","padding","spacing","margin","tagLine","fontSize","withRouter","movie","history","classes","Paper","component","className","IconButton","onClick","goBack","color","Typography","variant","title","href","homepage","tagline","goForward","getMovies","fetch","process","then","response","ok","Error","json","message","catch","error","getMovie","args","id","queryKey","getGenres","res","getMovieImages","getTopRated","getNowPlaying","getTrending","getUpcoming","getPopularActors","marginLeft","CircularIndeterminate","CircularProgress","gridList","width","height","TemplateMoviePage","children","useQuery","data","isLoading","isError","images","posters","Grid","container","style","item","xs","GridList","cellHeight","cols","map","image","GridListTile","gridListTile","src","file_path","alt","poster_path","MoviesContext","React","createContext","MoviesContextProvider","props","useState","myReviews","setMyReviews","favorites","setFavorites","mustWatch","setMustWatch","Provider","value","addToFavorites","removeFromFavorites","filter","mId","addToWatchList","removeFromWatchList","addReview","review","ratings","label","marginTop","flexDirection","alignItems","form","textField","submit","marginRight","snack","useForm","register","handleSubmit","errors","reset","context","useContext","rating","setRating","open","setOpen","handleSnackClose","event","push","Box","Snackbar","anchorOrigin","vertical","horizontal","onClose","severity","onSubmit","movieId","noValidate","TextField","required","name","autoFocus","inputRef","author","fullWidth","multiline","rows","minLength","content","select","onChange","target","helperText","option","MenuItem","buttons","Button","type","location","state","flexGrow","offset","mixins","toolbar","anchorEl","setAnchorEl","Boolean","useTheme","isMobile","useMediaQuery","breakpoints","down","menuOptions","path","handleMenuSelect","pageURL","AppBar","position","Toolbar","currentTarget","keepMounted","transformOrigin","opt","marginBottom","maxWidth","backgroundColor","media","formControl","minWidth","FilterMoviesCard","console","log","genres","unshift","handleChange","e","preventDefault","onUserInput","Card","CardContent","titleFilter","FormControl","InputLabel","Select","labelId","genreFilter","genre","CardMedia","img","card","avatar","MovieCard","action","find","favorite","CardHeader","header","Avatar","release_date","vote_average","CardActions","disableSpacing","to","size","MovieList","movies","m","sm","md","lg","xl","MovieListPageTemplate","nameFilter","setNameFilter","setGenreFilter","genreId","Number","displayedMovies","toLowerCase","search","genre_ids","includes","AddToFavoritesIcon","HomePage","results","localStorage","setItem","JSON","stringify","table","MovieReviews","reviews","setReviews","useEffect","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","r","scope","string","truncate","length","separator","pathname","listStyle","chip","fab","bottom","right","MovieDetails","drawerOpen","setDrawerOpen","overview","Chip","g","icon","runtime","revenue","toLocaleString","vote_count","production_countries","pco","Fab","Drawer","anchor","match","params","ActorsContext","actor","ActorList","actors","ActorsPageTemplate","displayedActors","PopularActorsPage","popularActors","RemoveFromFavoritesIcon","WriteReviewIcon","FavoriteMoviesPage","movieIds","favoriteMovieQueries","useQueries","queryFn","q","MovieReview","TopRatedMoviesPage","NowPlayingMoviesPage","TrendingMoviesPage","UpcomingMoviesPage","queryClient","QueryClient","defaultOptions","queries","staleTime","refetchInterval","refetchOnWindowFocus","App","client","exact","AddMovieReviewPage","MovieReviewPage","MoviePage","from","initialIsOpen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2229f4d5.chunk.js","sourcesContent":["import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  tagLine: {\n    fontSize: \"1.5rem\",\n  },\n}));\n\nconst MovieHeader = ( { movie, history}) => {\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"div\" className={classes.root}>\n      <IconButton aria-label=\"go back\" onClick={() => history.goBack()} >\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n      </IconButton>\n\n      <Typography variant=\"h4\" component=\"h3\">\n        {movie.title}\n        <a href={movie.homepage}>\n          <HomeIcon color=\"primary\" />\n        </a>\n        <br />\n        <span className={classes.tagLine}>{`   \"${movie.tagline}\"`} </span>\n      </Typography>\n      <IconButton aria-label=\"go forward\" onClick={() => history.goForward() } >\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default withRouter(MovieHeader);","export const getMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovie = (args) => {\n  // console.log(args)\n  const [, idPart] = args.queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getGenres = () => {\n  return fetch(\n    \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\n      process.env.REACT_APP_TMDB_KEY +\n      \"&language=en-US\"\n  ).then((res) => res.json());\n};\n\nexport const getMovieImages = ({ queryKey }) => {\n  const [, idPart] = queryKey;\n  const { id } = idPart;\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getMovieReviews = (id) => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((res) => res.json())\n    .then((json) => {\n      // console.log(json.results);\n      return json.results;\n    });\n};\n\n//Added 3 new pages: getTopRated, getNowPlaying, getTrending\n\nexport const getTopRated = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getNowPlaying = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\n//This problem has been fixed !!! ---trending has to use popular as keyword---\n\nexport const getTrending = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getUpcoming = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport const getPopularActors = () => {\n  return fetch(\n    ` https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.json().message);\n      }\n      return response.json();\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: \"center\",\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n      <CircularProgress />\n    </div>\n  );\n}","import React from \"react\";\nimport MovieHeader from \"../headerMovie\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getMovieImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n  },\n  gridList: {\n    width: 450,\n    height: '100vh',\n  },\n}));\n\nconst TemplateMoviePage = ({ movie, children }) => {\n  const classes = useStyles();\n  const { data , error, isLoading, isError } = useQuery(\n    [\"images\", { id: movie.id }],\n    getMovieImages\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const images = data.posters \n\n  return (\n    <>\n      <MovieHeader movie={movie} />\n\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\n        <Grid item xs={3}>\n          <div className={classes.root}>\n            <GridList cellHeight={500} className={classes.gridList} cols={1}>\n              {images.map((image) => (\n                <GridListTile key={image.file_path} className={classes.gridListTile} cols={1}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                    alt={image.poster_path}\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n        </Grid>\n\n        <Grid item xs={9}>\n          {children}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TemplateMoviePage;","import React, { useState } from \"react\";\n\nexport const MoviesContext = React.createContext(null);\n\nconst MoviesContextProvider = (props) => {\n  const [myReviews, setMyReviews] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [mustWatch, setMustWatch] = useState([]);\n\n  const addToFavorites = (movie) => {\n    setFavorites([...favorites, movie.id]);\n  };\n\n  const removeFromFavorites = (movie) => {\n    setFavorites(favorites.filter((mId) => mId !== movie.id));\n  };\n\n  const addToWatchList = (movie) => {\n    setMustWatch([...mustWatch, movie.id]);\n  };\n\n  const removeFromWatchList = (movie) => {\n    setMustWatch(mustWatch.filter((mId) => mId !== movie.id));\n  };\n\n  const addReview = (movie, review) => {\n    setMyReviews({ ...myReviews, [movie.id]: review });\n  };\n\n  return (\n    <MoviesContext.Provider\n      value={{\n        favorites,\n        addToFavorites,\n        removeFromFavorites,\n        mustWatch,\n        addToWatchList,\n        removeFromWatchList,\n        addReview\n      }}\n    >\n      {props.children}\n    </MoviesContext.Provider>\n  );\n};\n\nexport default MoviesContextProvider;\n","import React, {useContext, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport useForm from \"react-hook-form\";\nimport {MoviesContext} from \"../../contexts/moviesContext\";\nimport {withRouter} from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst ratings = [\n    {\n        value: 5,\n        label: \"Excellent\",\n    },\n    {\n        value: 4,\n        label: \"Good\",\n    },\n    {\n        value: 3,\n        label: \"Average\",\n    },\n    {\n        value: 2,\n        label: \"Poor\",\n    },\n    {\n        value: 0,\n        label: \"Terrible\",\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    form: {\n        width: \"100%\",\n        \"& > * \": {\n            marginTop: theme.spacing(2),\n        },\n    },\n    textField: {\n        width: \"40ch\",\n    },\n    submit: {\n        marginRight: theme.spacing(2),\n    },\n    snack: {\n        width: \"50%\",\n        \"& > * \": {\n            width: \"100%\",\n        },\n    },\n}));\n\nconst ReviewForm = ({movie, history}) => {\n    const classes = useStyles();\n    const {register, handleSubmit, errors, reset} = useForm();\n    const context = useContext(MoviesContext);\n    const [rating, setRating] = useState(3);\n    const [open, setOpen] = React.useState(false);  //NEW\n    const handleRatingChange = (event) => {\n        setRating(event.target.value);\n    };\n\n    const handleSnackClose = (event) => {     // NEW\n        setOpen(false);\n        history.push(\"/movies/favorites\");\n    };\n\n    const onSubmit = (review) => {\n        review.movieId = movie.id;\n        review.rating = rating;\n        // console.log(review);\n        context.addReview(movie, review);\n        setOpen(true);   // NEW\n    };\n\n    return (\n        <Box component=\"div\" className={classes.root}>\n            <Typography component=\"h2\" variant=\"h3\">\n                Write a review\n            </Typography>\n            <Snackbar\n                className={classes.snack}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                open={open}\n                onClose={handleSnackClose}\n            >\n                <MuiAlert\n                    severity=\"success\"\n                    variant=\"filled\"\n                    onClose={handleSnackClose}\n                >\n                    <Typography variant=\"h4\">\n                        Thank you for submitting a review\n                    </Typography>\n                </MuiAlert>\n            </Snackbar>\n            <form\n                className={classes.form}\n                onSubmit={handleSubmit(onSubmit)}\n                noValidate\n            >\n                <TextField\n                    className={classes.textField}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"author\"\n                    label=\"Author's name\"\n                    name=\"author\"\n                    autoFocus\n                    inputRef={register({required: \"Author name required\"})}\n                />\n                {errors.author && (\n                    <Typography variant=\"h6\" component=\"p\">\n                        {errors.author.message}\n                    </Typography>\n                )}\n\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"content\"\n                    label=\"Review text\"\n                    id=\"content\"\n                    multiline\n                    rows={10}\n                    inputRef={register({\n                        required: \"No review text\",\n                        minLength: {value: 10, message: \"Review is too short\"},\n                    })}\n                />\n                {errors.content && (\n                    <Typography variant=\"h6\" component=\"p\">\n                        {errors.content.message}\n                    </Typography>\n                )}\n                <TextField\n                    id=\"select-rating\"\n                    select\n                    variant=\"outlined\"\n                    label=\"Rating Select\"\n                    value={rating}\n                    onChange={handleRatingChange}\n                    helperText=\"Don't forget your rating\"\n                >\n                    {ratings.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n\n                <Box className={classes.buttons}>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                    <Button\n                        type=\"reset\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                        onClick={() => {\n                            reset({\n                                author: \"\",\n                                content: \"\",\n                            });\n                        }}\n                    >\n                        Reset\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n    );\n};\n\nexport default withRouter(ReviewForm);","import React from \"react\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport ReviewForm from \"../components/reviewForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\n\nconst WriteReviewPage = (props) => {\n  const { movieId } = props.location.state;\n  const { data: movie, error, isLoading, isError } = useQuery(\n    [\"movie\", { id: movieId }],\n    getMovie\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  return (\n    <PageTemplate movie={movie}>\n      <ReviewForm movie={movie} />\n    </PageTemplate>\n  );\n};\n\nexport default withRouter(WriteReviewPage);","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { withRouter } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n// import Login from \"./components/Login\";\n// import Logout from \"./components/Logout\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1\n  },\n  offset: theme.mixins.toolbar\n}));\n\nconst SiteHeader = ({ history }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const menuOptions = [\n    { label: \"Home\", path: \"/\" },\n    { label: \"Favorites\", path: \"/movies/favorites\" },\n    { label: \"Top Rated\", path: \"/movies/topRated\" },\n    { label: \"Now Playing\", path: \"/movies/nowPlaying\" },\n    { label: \"Trending\", path: \"/movies/trending\" },\n    { label: \"Upcoming\", path: \"/movies/upcoming\" },\n    { label: \"Popular Actors\", path: \"/person/popular\" },\n    { label: \"Login\", path: \"/login\" },\n    { label: \"Logout\", path: \"/logout\" }\n  ];\n\n  const handleMenuSelect = (pageURL) => {\n    history.push(pageURL);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"secondary\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            TMDB Client\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            All you ever wanted to know about Movies!\n          </Typography>\n          {isMobile ? (\n            <>\n              <IconButton\n                aria-label=\"menu\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\"\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n              >\n                {menuOptions.map((opt) => (\n                  <MenuItem\n                    key={opt.label}\n                    onClick={() => handleMenuSelect(opt.path)}\n                  >\n                    {opt.label}\n                  </MenuItem>\n                ))}\n              </Menu>\n            </>\n          ) : (\n            <>\n              {menuOptions.map((opt) => (\n                <Button\n                  key={opt.label}\n                  color=\"inherit\"\n                  onClick={() => handleMenuSelect(opt.path)}\n                >\n                  {opt.label}\n                </Button>\n              ))}\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </>\n  );\n};\n\nexport default withRouter(SiteHeader);\n","import { withRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\nconst Header = ({ title, history }) => {\n    const classes = useStyles();\n    return (\n    <Paper component=\"div\" className={classes.root}>\n       <IconButton aria-label=\"go back\" onClick={() => history.goBack()}>\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n      </IconButton>\n\n      <Typography variant=\"h4\" component=\"h3\">\n        {title}\n      </Typography>\n      <IconButton aria-label=\"go forward\" onClick={() => history.goForward()}>\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default withRouter(Header);\n","export default __webpack_public_path__ + \"static/media/pexels-dziana-hasanbekava-5480827.6123c500.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport img from \"../../images/pexels-dziana-hasanbekava-5480827.jpg\";\nimport { getGenres } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"rgb(204, 204, 0)\"\n  },\n  media: { height: 300 },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n    backgroundColor: \"rgb(255, 255, 255)\"\n  }\n}));\n\nexport default function FilterMoviesCard(props) {\n  const classes = useStyles();\n  console.log(useQuery(\"genres\", getGenres));\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const genres = data.genres;\n  if (genres[0].name !== \"All\") {\n    genres.unshift({ id: \"0\", name: \"All\" });\n  }\n\n  const handleChange = (e, type, value) => {\n    e.preventDefault();\n    props.onUserInput(type, value); // NEW\n  };\n\n  const handleTextChange = (e, props) => {\n    handleChange(e, \"name\", e.target.value);\n  };\n\n  const handleGenreChange = (e) => {\n    handleChange(e, \"genre\", e.target.value);\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          Filter the movies.\n        </Typography>\n        <TextField\n          className={classes.formControl}\n          id=\"filled-search\"\n          label=\"Search field\"\n          type=\"search\"\n          value={props.titleFilter}\n          variant=\"filled\"\n          onChange={handleTextChange}\n        />\n\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\n          <Select\n            labelId=\"genre-label\"\n            id=\"genre-select\"\n            value={props.genreFilter}\n            onChange={handleGenreChange}\n          >\n            {genres.map((genre) => {\n              return (\n                <MenuItem key={genre.id} value={genre.id}>\n                  {genre.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </CardContent>\n      <CardMedia className={classes.media} image={img} title=\"Filter\" />\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          Filter the movies.\n          <br />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/film-poster-placeholder.9a8182eb.png\";","import React, { useContext  } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\n\nconst useStyles = makeStyles({\n  card: { maxWidth: 345 },\n  media: { height: 500 },\n  avatar: {\n    backgroundColor: \"rgb(255, 0, 0)\",\n  },\n});\n\nexport default function MovieCard({ movie, action }) {\n  const classes = useStyles();\n  const { favorites, addToFavorites } = useContext(MoviesContext);\n\n  if (favorites.find((id) => id === movie.id)) {\n    movie.favorite = true;\n  } else {\n    movie.favorite = false\n  }\n\n  const handleAddToFavorite = (e) => {\n    e.preventDefault();\n    addToFavorites(movie);\n  };\n\n  return (\n\n    <Card className={classes.card}>\n <CardHeader\n      className={classes.header}\n      avatar={\n        movie.favorite ? (\n          <Avatar className={classes.avatar}>\n            <FavoriteIcon />\n          </Avatar>\n        ) : null\n      }\n      title={\n        <Typography variant=\"h5\" component=\"p\">\n          {movie.title}{\" \"}\n        </Typography>\n      }\n    />      <CardMedia\n        className={classes.media}\n        image={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n            : img\n        }\n      />\n      <CardContent>\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" component=\"p\">\n              <CalendarIcon fontSize=\"small\" />\n              {movie.release_date}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" component=\"p\">\n              <StarRateIcon fontSize=\"small\" />\n              {\"  \"} {movie.vote_average}{\" \"}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions disableSpacing>\n        {action(movie)}\n\n        <Link to={`/movies/${movie.id}`}>\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n            More Info ...\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}","import React from \"react\";\nimport Movie from \"../movieCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst MovieList = ( {movies, action }) => {\n  let movieCards = movies.map((m) => (\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n      <Movie key={m.id} movie={m} action={action} />\n    </Grid>\n  ));\n  return movieCards;\n};\n\nexport default MovieList;","import React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MovieList from \"../movieList\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"20px\",\n  },\n});\n\nfunction MovieListPageTemplate({ movies, title, action }) {\n  const classes = useStyles();\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const genreId = Number(genreFilter);\n\n  let displayedMovies = movies\n    .filter((m) => {\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n    })\n    .filter((m) => {\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n    });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);\n    else setGenreFilter(value);\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Header title={title} />\n      </Grid>\n      <Grid item container spacing={5}>\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n          <FilterCard\n            onUserInput={handleChange}\n            titleFilter={nameFilter}\n            genreFilter={genreFilter}\n          />\n        </Grid>\n        <MovieList action={action} movies={displayedMovies}></MovieList>\n      </Grid>\n    </Grid>\n  );\n}\nexport default MovieListPageTemplate;","import React, { useContext } from \"react\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst AddToFavoritesIcon = ({ movie }) => {\n  const context = useContext(MoviesContext);\n\n  const handleAddToFavorites = (e) => {\n    e.preventDefault();\n    context.addToFavorites(movie);\n  };\n  return (\n    <IconButton aria-label=\"add to favorites\" onClick={handleAddToFavorites}>\n      <FavoriteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default AddToFavoritesIcon;\n","import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getMovies} from '../api/tmdb-api'\nimport AddToFavoritesIcon from '../components/cardIcons/addToFavorites'\n\nconst HomePage = (props) => {\n    const {  data, error, isLoading, isError }  = useQuery('discover', getMovies)\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>\n  }  \n  const movies = data.results;\n\n  // Redundant, but necessary to avoid app crashing.\n  const favorites = movies.filter(m => m.favorite)\n  localStorage.setItem('favorites', JSON.stringify(favorites))\n  const addToFavorites = (movieId) => true \n\n  return (\n    <PageTemplate\n      title=\"Discover Movies\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie} />\n      }}\n    />\n);\n};\n\nexport default HomePage;","import React, { useEffect, useState }  from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link } from \"react-router-dom\";\nimport { getMovieReviews } from \"../../api/tmdb-api\";\nimport { excerpt } from \"../../util\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 550,\n  },\n});\n\nexport default function MovieReviews({ movie }) {\n  const classes = useStyles();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movie.id).then((reviews) => {\n      setReviews(reviews);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"reviews table\">\n        <TableHead>\n          <TableRow>\n            <TableCell >Author</TableCell>\n            <TableCell align=\"center\">Excerpt</TableCell>\n            <TableCell align=\"right\">More</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {reviews.map((r) => (\n            <TableRow key={r.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {r.author}\n              </TableCell>\n              <TableCell >{excerpt(r.content)}</TableCell>\n              <TableCell >\n                <Link\n                  to={{\n                    pathname: `/reviews/${r.id}`,\n                    state: {\n                      review: r,\n                      movie: movie,\n                    },\n                  }}\n                >\n                  Full Review\n                </Link>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import truncate from \"lodash/truncate\";\n\nexport function excerpt(string) {\n  return truncate(string, {    \n    length: 400, // maximum 400 characters\n    separator: /,?\\.* +/, // separate by spaces, including preceding commas and periods\n  });\n}\n","import React, { useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport MonetizationIcon from \"@material-ui/icons/MonetizationOn\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MovieReviews from \"../movieReviews\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst MovieDetails = ({ movie }) => {  // Don't miss this!\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  return (\n\n    <>\n      <Typography variant=\"h5\" component=\"h3\">\n        Overview\n      </Typography>\n\n      <Typography variant=\"h6\" component=\"p\">\n        {movie.overview}\n      </Typography>\n\n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n        </li>\n        {movie.genres.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n\n      <Paper component=\"ul\" className={classes.root}>\n        <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\n        <Chip\n          icon={<MonetizationIcon />}\n          label={`${movie.revenue.toLocaleString()}`}\n        />\n        <Chip\n          icon={<StarRate />}\n          label={`${movie.vote_average} (${movie.vote_count}`}\n        />\n        <Chip label={`Released: ${movie.release_date}`} />\n      </Paper>\n      \n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip label=\"Production Countries\" className={classes.chip} color=\"primary\" />\n        </li>\n        {movie.production_countries.map((pco) => (\n          <li key={pco.name}>\n            <Chip label={pco.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n\n\n      <Fab\n        color=\"secondary\"\n        variant=\"extended\"\n        onClick={() =>setDrawerOpen(true)}\n        className={classes.fab}\n      >\n        <NavigationIcon />\n        Reviews\n      </Fab>\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\n        <MovieReviews movie={movie} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default  MovieDetails ;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails\";\nimport PageTemplate from \"../components/templateMoviePage\";\n// import useMovie from \"../hooks/useMovie\";\nimport { getMovie } from '../api/tmdb-api'\nimport { useQuery } from \"react-query\";\nimport Spinner from '../components/spinner'\n\nconst MovieDetailsPage = (props) => {\n  const { id } = props.match.params\n\n  const { data: movie, error, isLoading, isError } = useQuery(\n    [\"movie\", { id: id }],\n    getMovie\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return (\n    <>\n      {movie ? (\n        <>\n          <PageTemplate movie={movie}>\n            <MovieDetails movie={movie} />\n          </PageTemplate>\n        </>\n      ) : (\n        <p>Waiting for movie details</p>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(MovieDetailsPage);","import React, { useState } from \"react\";\n\nexport const ActorsContext = React.createContext(null);\n\nconst ActorsContextProvider = (props) => {\n  const [myReviews, setMyReviews] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [mustWatch, setMustWatch] = useState([]);\n\n  const addToFavorites = (movie) => {\n    setFavorites([...favorites, movie.id]);\n  };\n\n  const removeFromFavorites = (movie) => {\n    setFavorites(favorites.filter((mId) => mId !== movie.id));\n  };\n\n  const addToWatchList = (movie) => {\n    setMustWatch([...mustWatch, movie.id]);\n  };\n\n  const removeFromWatchList = (movie) => {\n    setMustWatch(mustWatch.filter((mId) => mId !== movie.id));\n  };\n\n  const addReview = (movie, review) => {\n    setMyReviews({ ...myReviews, [movie.id]: review });\n  };\n\n  return (\n    <ActorsContext.Provider\n      value={{\n        favorites,\n        addToFavorites,\n        removeFromFavorites,\n        mustWatch,\n        addToWatchList,\n        removeFromWatchList,\n        addReview\n      }}\n    >\n      {props.children}\n    </ActorsContext.Provider>\n  );\n};\n\nexport default ActorsContextProvider;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from \"../../images/film-poster-placeholder.png\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { ActorsContext } from \"../../contexts/actorsContext\";\n\nconst useStyles = makeStyles({\n  card: { maxWidth: 345 },\n  media: { height: 500 },\n  avatar: {\n    backgroundColor: \"rgb(255, 0, 0)\"\n  }\n});\n\nexport default function MovieCard({ actor, action }) {\n  const classes = useStyles();\n  const { favorites, addToFavorites } = useContext(ActorsContext);\n\n  if (favorites.find((id) => id === actor.id)) {\n    actor.favorite = true;\n  } else {\n    actor.favorite = false;\n  }\n\n  const handleAddToFavorite = (e) => {\n    e.preventDefault();\n    addToFavorites(actor);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        className={classes.header}\n        avatar={\n          actor.favorite ? (\n            <Avatar className={classes.avatar}>\n              <FavoriteIcon />\n            </Avatar>\n          ) : null\n        }\n        title={\n          <Typography variant=\"h5\" component=\"p\">\n            {actor.title}{\" \"}\n          </Typography>\n        }\n      />{\" \"}\n      <CardMedia\n        className={classes.media}\n        image={\n          actor.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${actor.poster_path}`\n            : img\n        }\n      />\n      <CardContent>\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" component=\"p\">\n              <CalendarIcon fontSize=\"small\" />\n              {actor.release_date}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" component=\"p\">\n              <StarRateIcon fontSize=\"small\" />\n              {\"  \"} {actor.vote_average}{\" \"}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions disableSpacing>\n        {action(actor)}\n\n        <Link to={`/movies/${actor.id}`}>\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n            More Info ...\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Actor from \"../actorCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ActorList = ({ actors, action }) => {\n  let actorCards = actors.map((m) => (\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n      <Actor key={m.id} movie={m} action={action} />\n    </Grid>\n  ));\n  return actorCards;\n};\n\nexport default ActorList;\n","import React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ActorList from \"../actorList\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"20px\"\n  }\n});\n\nfunction ActorsPageTemplate({ actors, title, action }) {\n  const classes = useStyles();\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const genreId = Number(genreFilter);\n\n  let displayedActors = actors\n    .filter((m) => {\n      return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n    })\n    .filter((m) => {\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n    });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);\n    else setGenreFilter(value);\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Header title={title} />\n      </Grid>\n      <Grid item container spacing={5}>\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n          <FilterCard\n            onUserInput={handleChange}\n            titleFilter={nameFilter}\n            genreFilter={genreFilter}\n          />\n        </Grid>\n        <ActorList action={action} actors={displayedActors}></ActorList>\n      </Grid>\n    </Grid>\n  );\n}\nexport default ActorsPageTemplate;\n","import React from \"react\";\nimport PageTemplate from \"../components/templateActorsPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getPopularActors } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst PopularActorsPage = (props) => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"popularActors\",\n    getPopularActors\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const movies = data.results;\n\n  const favorites = movies.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const AddToFavoritesIcon = (movieId) => true;\n  return (\n    <PageTemplate\n      title=\"POPULAR ACTORS\"\n      popularActors={getPopularActors}\n      action={(popularActors) => {\n        return <AddToFavoritesIcon popularActors={popularActors} />;\n      }}\n    />\n  );\n};\n\nexport default PopularActorsPage;\n","import React, { useContext } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\n\nconst RemoveFromFavoritesIcon = ({ movie }) => {\n  const context = useContext(MoviesContext);\n\n  const handleRemoveFromFavorites = (e) => {\n    e.preventDefault();\n    context.removeFromFavorites(movie);\n  };\n  return (\n    <IconButton\n      aria-label=\"remove from favorites\"\n      onClick={handleRemoveFromFavorites}\n    >\n      <DeleteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default RemoveFromFavoritesIcon;\n","import React from \"react\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport { Link } from \"react-router-dom\";\n\nconst WriteReviewIcon = ({ movie }) => {\n  return (\n    <Link\n      to={{\n        pathname: `/reviews/form`,\n        state: {\n          movieId: movie.id,\n        },\n      }}\n    >\n      <RateReviewIcon color=\"primary\" fontSize=\"large\" />\n    </Link>\n  );\n};\n\nexport default WriteReviewIcon;\n","import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\n\nconst FavoriteMoviesPage = () => {\n  const {favorites: movieIds } = useContext(MoviesContext);\n\n  // Create an array of queries and run in parallel.\n  const favoriteMovieQueries = useQueries(\n    movieIds.map((movieId) => {\n      return {\n        queryKey: [\"movie\", { id: movieId }],\n        queryFn: getMovie,\n      };\n    })\n  );\n  // Check if any of the parallel queries is still loading.\n  const isLoading = favoriteMovieQueries.find((m) => m.isLoading === true);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const movies = favoriteMovieQueries.map((q) => {\n    q.data.genre_ids = q.data.genres.map(g => g.id)\n    return q.data\n  });\n\n  const toDo = () => true;\n\n  return (\n    <PageTemplate\n      title=\"Favorite Movies\"\n      movies={movies}\n      action={(movie) => {\n        return (\n          <>\n            <RemoveFromFavorites movie={movie} />\n            <WriteReview movie={movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;\n","import React from \"react\";\n\nconst MovieReview =  ({ review }) => {\n  return (\n    <>\n      <p>Review By: {review.author} </p>\n      <p>{review.content} </p>\n    </>\n  );\n};\nexport default MovieReview","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport MovieReview from \"../components/movieReview\";\n\nconst MovieReviewPage = (props) => {\n  const {movie, review} = props.location.state\n  return (\n    <PageTemplate movie={movie}>\n      <MovieReview review={review} />\n    </PageTemplate>\n  );\n};\n\nexport default withRouter(MovieReviewPage);\n","import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getTopRated } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst TopRatedMoviesPage = (props) => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"topMovies\",\n    getTopRated\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const movies = data.results;\n\n  const favorites = movies.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const AddToFavoritesIcon = (movieId) => true;\n  return (\n    <PageTemplate\n      title=\"TOP RATED MOVIES\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie} />;\n      }}\n    />\n  );\n};\n\nexport default TopRatedMoviesPage;\n","import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getNowPlaying } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst NowPlayingMoviesPage = (props) => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"nowPlaying\",\n    getNowPlaying\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const movies = data.results;\n\n  const favorites = movies.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const AddToFavoritesIcon = (movieId) => true;\n  return (\n    <PageTemplate\n      title=\"NOW IN CINEMAS NEAR YOU\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie} />;\n      }}\n    />\n  );\n};\n\nexport default NowPlayingMoviesPage;\n","import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getTrending } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst TrendingMoviesPage = (props) => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"trendingMovies\",\n    getTrending\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const movies = data.results;\n\n  const favorites = movies.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const AddToFavoritesIcon = (movieId) => true;\n  return (\n    <PageTemplate\n      title=\"TRENDING MOVIES\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie} />;\n      }}\n    />\n  );\n};\n\nexport default TrendingMoviesPage;\n","import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getUpcoming } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst UpcomingMoviesPage = (props) => {\n  const { data, error, isLoading, isError } = useQuery(\n    \"upcomingMovies\",\n    getUpcoming\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const movies = data.results;\n\n  const favorites = movies.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const AddToFavoritesIcon = (movieId) => true;\n  return (\n    <PageTemplate\n      title=\"UPCOMING MOVIES\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie} />;\n      }}\n    />\n  );\n};\n\nexport default UpcomingMoviesPage;\n","import AddMovieReviewPage from \"./pages/addMovieReviewPage\";\nimport SiteHeader from \"./components/siteHeader\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport HomePage from \"./pages/homePage\";\nimport MoviePage from \"./pages/movieDetailsPage\";\nimport PopularActorsPage from \"./pages/popularActorsPage\";\n\nimport FavoriteMoviesPage from \"./pages/favoriteMoviesPage\"; // NEW\nimport MovieReviewPage from \"./pages/movieReviewPage\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport MoviesContextProvider from \"./contexts/moviesContext\";\nimport ActorsContextProvider from \"./contexts/actorsContext\";\n\nimport TopRatedMoviesPage from \"./pages/topRatedMoviesPage\"; // NEW\nimport NowPlayingMoviesPage from \"./pages/nowPlayingMoviesPage\"; // NEW\nimport TrendingMoviesPage from \"./pages/trendingMoviesPage\"; // NEW\nimport UpcomingMoviesPage from \"./pages/upcomingMoviesPage\"; // NEW\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 360000,\n      refetchInterval: 360000,\n      refetchOnWindowFocus: false\n    }\n  }\n});\n\nconst App = () => {\n  return (\n    <Auth0Provider\n    // domain=\"xxxxxxx.us.auth0.com\"\n    // clientId=\"XXXXXXXXXXXXX\"\n    // redirectUri={window.location.origin}\n    >\n      <QueryClientProvider client={queryClient}>\n        <BrowserRouter>\n          <SiteHeader />\n          <MoviesContextProvider>\n            {\" \"}\n            <Switch>\n              <Route\n                exact\n                path=\"/reviews/form\"\n                component={AddMovieReviewPage}\n              />\n              <Route path=\"/reviews/:id\" component={MovieReviewPage} />\n              <Route\n                exact\n                path=\"/movies/favorites\"\n                component={FavoriteMoviesPage}\n              />\n              <Route\n                exact\n                path=\"/movies/toprated\"\n                component={TopRatedMoviesPage}\n              />\n              <Route\n                exact\n                path=\"/movies/nowplaying\"\n                component={NowPlayingMoviesPage}\n              />\n              <Route\n                exact\n                path=\"/movies/trending\"\n                component={TrendingMoviesPage}\n              />\n              <Route\n                exact\n                path=\"/movies/upcoming\"\n                component={UpcomingMoviesPage}\n              />\n              <Route\n                exact\n                path=\"/person/popular\"\n                component={PopularActorsPage}\n              />\n              <Route path=\"/movies/:id\" component={MoviePage} />\n              <Route exact path=\"/\" component={HomePage} />\n              <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n          </MoviesContextProvider>\n        </BrowserRouter>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </Auth0Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}